{
  "database_name": "retryable-reads-tests",
  "collection_name": "coll",
  "data": [
    {
      "_id": 1,
      "x": 0
    },
    {
      "_id": 2,
      "x": 1
    },
    {
      "_id": 3,
      "x": 2
    }
  ],
  "minServerVersion": "4.1.7",
  "tests": [
    {
      "description": "MapReduce succeeds on first attempt",
      "clientOptions": {
        "retryReads": true
      },
      "operation": {
        "name": "mapReduce",
        "object": "collection",
        "arguments": {
          "map": {
            "$code": "function inc() { return emit(0, this.x + 1) }"
          },
          "reduce": {
            "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
          },
          "out": {
            "inline": 1
          }
        },
        "result": [
          {
            "_id": 0,
            "value": 6
          }
        ]
      },
      "expectations": [
        {
          "command_started_event": {
            "command": {
              "mapReduce": "coll",
              "map": {
                "$code": "function inc() { return emit(0, this.x + 1) }"
              },
              "reduce": {
                "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
              },
              "out": {
                "inline": 1
              }
            },
            "database_name": "retryable-reads-tests"
          }
        }
      ]
    },
    {
      "description": "MapReduce succeeds on second attempt",
      "clientOptions": {
        "retryReads": true
      },
      "failPoint": {
        "configureFailPoint": "failCommand",
        "mode": {
          "times": 1
        },
        "data": {
          "failCommands": [
            "mapReduce"
          ],
          "closeConnection": true
        }
      },
      "operation": {
        "name": "mapReduce",
        "object": "collection",
        "arguments": {
          "map": {
            "$code": "function inc() { return emit(0, this.x + 1) }"
          },
          "reduce": {
            "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
          },
          "out": {
            "inline": 1
          }
        },
        "result": [
          {
            "_id": 0,
            "value": 6
          }
        ]
      },
      "expectations": [
        {
          "command_started_event": {
            "command": {
              "mapReduce": "coll",
              "map": {
                "$code": "function inc() { return emit(0, this.x + 1) }"
              },
              "reduce": {
                "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
              },
              "out": {
                "inline": 1
              }
            },
            "database_name": "retryable-reads-tests"
          }
        },
        {
          "command_started_event": {
            "command": {
              "mapReduce": "coll",
              "map": {
                "$code": "function inc() { return emit(0, this.x + 1) }"
              },
              "reduce": {
                "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
              },
              "out": {
                "inline": 1
              }
            },
            "database_name": "retryable-reads-tests"
          }
        }
      ]
    },
    {
      "description": "MapReduce fails on first attempt",
      "clientOptions": {
        "retryReads": false
      },
      "failPoint": {
        "configureFailPoint": "failCommand",
        "mode": {
          "times": 1
        },
        "data": {
          "failCommands": [
            "mapReduce"
          ],
          "closeConnection": true
        }
      },
      "operation": {
        "name": "mapReduce",
        "object": "collection",
        "arguments": {
          "map": {
            "$code": "function inc() { return emit(0, this.x + 1) }"
          },
          "reduce": {
            "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
          },
          "out": {
            "inline": 1
          }
        },
        "error": true
      },
      "expectations": [
        {
          "command_started_event": {
            "command": {
              "mapReduce": "coll",
              "map": {
                "$code": "function inc() { return emit(0, this.x + 1) }"
              },
              "reduce": {
                "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
              },
              "out": {
                "inline": 1
              }
            },
            "database_name": "retryable-reads-tests"
          }
        }
      ]
    },
    {
      "description": "MapReduce fails on second attempt",
      "clientOptions": {
        "retryReads": true
      },
      "failPoint": {
        "configureFailPoint": "failCommand",
        "mode": {
          "times": 2
        },
        "data": {
          "failCommands": [
            "mapReduce"
          ],
          "closeConnection": true
        }
      },
      "operation": {
        "name": "mapReduce",
        "object": "collection",
        "arguments": {
          "map": {
            "$code": "function inc() { return emit(0, this.x + 1) }"
          },
          "reduce": {
            "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
          },
          "out": {
            "inline": 1
          }
        },
        "error": true
      },
      "expectations": [
        {
          "command_started_event": {
            "command": {
              "mapReduce": "coll",
              "map": {
                "$code": "function inc() { return emit(0, this.x + 1) }"
              },
              "reduce": {
                "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
              },
              "out": {
                "inline": 1
              }
            },
            "database_name": "retryable-reads-tests"
          }
        },
        {
          "command_started_event": {
            "command": {
              "mapReduce": "coll",
              "map": {
                "$code": "function inc() { return emit(0, this.x + 1) }"
              },
              "reduce": {
                "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
              },
              "out": {
                "inline": 1
              }
            },
            "database_name": "retryable-reads-tests"
          }
        }
      ]
    },
    {
      "description": "MapReduce without {inline: 1} does not retry",
      "clientOptions": {
        "retryReads": true
      },
      "failPoint": {
        "configureFailPoint": "failCommand",
        "mode": {
          "times": 1
        },
        "data": {
          "failCommands": [
            "mapReduce"
          ],
          "closeConnection": true
        }
      },
      "operation": {
        "name": "mapReduce",
        "object": "collection",
        "arguments": {
          "map": {
            "$code": "function inc() { return emit(0, this.x + 1) }"
          },
          "reduce": {
            "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
          },
          "out": "output-collection"
        },
        "error": true
      },
      "expectations": [
        {
          "command_started_event": {
            "command": {
              "mapReduce": "coll",
              "map": {
                "$code": "function inc() { return emit(0, this.x + 1) }"
              },
              "reduce": {
                "$code": "function sum(key, values) { return values.reduce((acc, x) => acc + x); }"
              },
              "out": "output-collection"
            },
            "database_name": "retryable-reads-tests"
          }
        }
      ]
    }
  ]
}
