database_name: &database_name "retryable-reads-tests"
collection_name: &collection_name "coll"

data:
    - {_id: 1, x: 11}
    - {_id: 2, x: 22}
    - {_id: 3, x: 33}

minServerVersion: '4.1.7' # 4.2

tests:
    -
        description: "client.watch succeeds after InterruptedAtShutdown"
        topology:  [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint: &failCommand_failPoint
            configureFailPoint: failCommand
            mode: { times: 1 }
            data: { failCommands: [aggregate], errorCode: 11600 }
        operations:
            - &retryable_operation
                name: watch
                object: client
        expectations:
            - &retryable_command_started_event
                command_started_event:
                    command:
                        aggregate: 1
                        cursor: {}
                        pipeline: [ { $changeStream: { fullDocument: "default", allChangesForCluster: true } } ]
                    database_name: admin
            - *retryable_command_started_event
    -
        description: "client.watch succeeds after InterruptedDueToStepDown"
        topology:  [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 11602 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch succeeds after NotMaster"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 10107 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch succeeds after NotMasterNoSlaveOk"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 13435 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch succeeds after NotMasterOrSecondary"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 13436 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch succeeds after PrimarySteppedDown"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 189 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch succeeds after ShutdownInProgress"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 91 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch succeeds after HostNotFound"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 7 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch succeeds after HostUnreachable"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 6 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch succeeds after NetworkTimeout"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 89 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch succeeds after SocketException"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 9001 }
        operations: [*retryable_operation]
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch fails after two NotMaster errors"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: true
        failPoint:
            <<: *failCommand_failPoint
            mode: { times: 2 }
            data: { failCommands: [aggregate], errorCode: 10107 }
        operations:
            - &retryable_operation_fails
                <<: *retryable_operation
                error: true
        expectations:
             - *retryable_command_started_event
             - *retryable_command_started_event
    -
        description: "client.watch fails after NotMaster when retryReads is false"
        topology: [replicaset, sharded]
        clientOptions:
            retryReads: false
        failPoint:
            <<: *failCommand_failPoint
            data: { failCommands: [aggregate], errorCode: 10107 }
        operations: [*retryable_operation_fails]
        expectations:
             - *retryable_command_started_event
