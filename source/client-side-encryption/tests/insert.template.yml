runOn:
  - minServerVersion: "4.1.10"
database_name: &database_name "default"
collection_name: &collection_name "default"

data: []
json_schema: {{schema()}}
key_vault_data: [{{key()}}]

tests:
  - description: "Insert with encryption"
    clientOptions:
      auto_encrypt_opts:
        kms_providers:
          aws: {} # Credentials filled in from environment.
    operations:
      - name: insertOne
        arguments:
          document: &doc0 { _id: 1, ssn: "457-55-5462", random: "abc" }
    expectations:
      # Auto encryption will request the collection info.
      - command_started_event:
          command:
            listCollections: 1
            cursor: {}
            filter:
              name: *collection_name
          command_name: listCollections
      - command_started_event:
          command:
            listCollections: 1
            cursor: {}
            filter:
              name: "datakeys"
            $db: admin
          command_name: listCollections
      # Then key is fetched from the key vault.
      - command_started_event:
          command:
            find: datakeys
            filter: { _id: { $in: [ {{key()["_id"]}} ] } }
            $db: admin
          command_name: find
      - command_started_event:
          command:
            insert: *collection_name
            documents:
              - &doc0_encrypted { _id: 1, ssn: {{ciphertext("457-55-5462", field="ssn")}}, random: { $$type: "binData" } }
            ordered: true
          command_name: insert
    outcome:
      collection:
        # Outcome is checked using a separate MongoClient without auto encryption.
        data:
          - *doc0_encrypted