description: createKey-dataKeyOpts-keyMaterial

schemaVersion: "1.8"

runOnRequirements:
  - csfle: true

createEntities:
  - client:
      id: &client0 client0
  - clientEncryption:
      id: &clientEncryption0 clientEncryption0
      clientEncryptionOpts:
        keyVaultClient: *client0
        keyVaultNamespace: keyvault.datakeys
        kmsProviders:
          local:
            key: { $$placeholder: 1 }
  - database:
      id: &database0 database0
      client: *client0
      databaseName: &database0Name keyvault
  - collection:
      id: &collection0 collection0
      database: *database0
      collectionName: &collection0Name datakeys

initialData:
  - databaseName: *database0Name
    collectionName: *collection0Name
    documents: []

tests:
  - description: create datakey with custom key material
    operations:
      - name: createKey
        object: *clientEncryption0
        arguments:
          kmsProvider: local
          opts:
            # "key_material" repeated 8 times.
            keyMaterial: { $binary: { base64: a2V5X21hdGVyaWFsa2V5X21hdGVyaWFsa2V5X21hdGVyaWFsa2V5X21hdGVyaWFsa2V5X21hdGVyaWFsa2V5X21hdGVyaWFsa2V5X21hdGVyaWFsa2V5X21hdGVyaWFs, subType: "00" } }
        expectResult: { $$type: binData }
      - name: find
        object: *collection0
        arguments:
          filter: {}
          projection: { _id: 0, masterKey: 1 }
        expectResult:
          - masterKey: { provider: local }
