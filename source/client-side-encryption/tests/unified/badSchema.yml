description: badSchema
schemaVersion: '1.23'
runOnRequirements:
  - minServerVersion: "4.1.10"
createEntities:
  - client:
      id: "client0"
      autoEncryptOpts:
        schemaMap:
          "default.default": {'properties': {'encrypted_string': {'encrypt': {'keyId': [
                     '$binary': {'base64': 'AAAAAAAAAAAAAAAAAAAAAA==', 'subType': '04'}],
                  'bsonType': 'string', 'algorithm': 'AEAD_AES_256_CBC_HMAC_SHA_512-Random'}}},
            'bsonType': 'array'}
        kmsProviders:
          aws: { accessKeyId: { $$placeholder: 1 }, secretAccessKey: { $$placeholder: 1 }, sessionToken: { $$placeholder: 1 } }
      observeEvents:
        - commandStartedEvent
  - database:
      id: "db"
      client: "client0"
      databaseName: default
  - collection:
      id: "coll"
      database: "db"
      collectionName: default
initialData:
  - databaseName: default
    collectionName: default
    documents: []
  - databaseName: keyvault
    collectionName: datakeys
    documents: [{'status': 1, '_id': {'$binary': {'base64': 'AAAAAAAAAAAAAAAAAAAAAA==',
              'subType': '04'}}, 'masterKey': {'provider': 'aws', 'key': 'arn:aws:kms:us-east-1:579766882180:key/89fcc2c4-08b0-4bd9-9f25-e30687b580d0',
            'region': 'us-east-1'}, 'updateDate': {'$date': {'$numberLong': '1552949630483'}},
          'keyMaterial': {'$binary': {'base64': 'AQICAHhQNmWG2CzOm1dq3kWLM+iDUZhEqnhJwH9wZVpuZ94A8gEqnsxXlR51T5EbEVezUqqKAAAAwjCBvwYJKoZIhvcNAQcGoIGxMIGuAgEAMIGoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDHa4jo6yp0Z18KgbUgIBEIB74sKxWtV8/YHje5lv5THTl0HIbhSwM6EqRlmBiFFatmEWaeMk4tO4xBX65eq670I5TWPSLMzpp8ncGHMmvHqRajNBnmFtbYxN3E3/WjxmdbOOe+OXpnGJPcGsftc7cB2shRfA4lICPnE26+oVNXT6p0Lo20nY5XC7jyCO',
              'subType': '00'}}, 'creationDate': {'$date': {'$numberLong': '1552949630483'}},
          'keyAltNames': ['altname', 'another_altname']}]
tests:
  - description: "Schema with an encrypted field in an array"
    operations:
      - name: insertOne
        arguments:
          document: &doc0 {_id: 1, encrypted_string: "string0"}
        object: "coll"
        expectError:
          errorContains: "Invalid schema"
    outcome:
      - documents: []
        collectionName: &collection_name "default"
        databaseName: &database_name "default"
  - description: "Schema without specifying parent object types"
    operations:
      - name: insertOne
        arguments:
          document: *doc0
        object: "coll"
        expectError:
          errorContains: "Invalid schema"
    outcome:
      - documents: []
        collectionName: *collection_name
        databaseName: *database_name
  - description: "Schema with siblings of encrypt document"
    operations:
      - name: insertOne
        arguments:
          document: *doc0
        object: "coll"
        expectError:
          errorContains: "'encrypt' cannot be used in conjunction with 'bsonType'"
    outcome:
      - documents: []
        collectionName: *collection_name
        databaseName: *database_name
  - description: "Schema with logical keywords"
    operations:
      - name: insertOne
        arguments:
          document: *doc0
        object: "coll"
        expectError:
          errorContains: "Invalid schema"
    outcome:
      - documents: []
        collectionName: *collection_name
        databaseName: *database_name
