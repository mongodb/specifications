runOn:
  - minServerVersion: "4.1.10"
database_name: &database_name "default"
collection_name: &collection_name "default"

data:
  - &doc0_encrypted { _id: 1, ssn: {'$binary': {'base64': 'AQAAAAAAAAAAAAAAAAAAAAACsdNMtVDy09S7BbEGrxNeFPKWl/7qb2EFqJfA2FqBEK1jW/5WFUZTPKWls9PBz+4Ro8Z6g5b+zAY+rh0bHmssKfg4g3GZ3j7rBt1tyqh3B2w=', 'subType': '06'}} }
  - &doc1_encrypted { _id: 2, ssn: {'$binary': {'base64': 'AQAAAAAAAAAAAAAAAAAAAAACUMZIlZ4eQzJmNxnxOi5fqWrhnpXDXdOPdkRG4hbqOTmTIN2+WfGXTcAaszTRg7XhM01c18lfd3XtPl3iUNXU6fEYjGf1mLPkQ3tlO3wOf/k=', 'subType': '06'}} }
json_schema: {'properties': {'encrypted_w_altname': {'encrypt': {'keyId': '/altname', 'bsonType': 'string', 'algorithm': 'AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic'}}, 'ssn': {'encrypt': {'keyId': [{'$binary': {'base64': 'AAAAAAAAAAAAAAAAAAAAAA==', 'subType': '04'}}], 'bsonType': 'string', 'algorithm': 'AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic'}}, 'random': {'encrypt': {'keyId': [{'$binary': {'base64': 'AAAAAAAAAAAAAAAAAAAAAA==', 'subType': '04'}}], 'bsonType': 'string', 'algorithm': 'AEAD_AES_256_CBC_HMAC_SHA_512-Random'}}, 'ssn_equivalent': {'encrypt': {'keyId': [{'$binary': {'base64': 'AAAAAAAAAAAAAAAAAAAAAA==', 'subType': '04'}}], 'bsonType': 'string', 'algorithm': 'AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic'}}}, 'bsonType': 'object'}
key_vault_data: [{'status': 1, '_id': {'$binary': {'base64': 'AAAAAAAAAAAAAAAAAAAAAA==', 'subType': '04'}}, 'masterKey': {'provider': 'aws', 'key': 'arn:aws:kms:us-east-1:579766882180:key/89fcc2c4-08b0-4bd9-9f25-e30687b580d0', 'region': 'us-east-1'}, 'updateDate': {'$date': {'$numberLong': '1552949630483'}}, 'keyMaterial': {'$binary': {'base64': 'AQICAHhQNmWG2CzOm1dq3kWLM+iDUZhEqnhJwH9wZVpuZ94A8gF9FSYZL9Ze8TvTA3WBd3nmAAAAwjCBvwYJKoZIhvcNAQcGoIGxMIGuAgEAMIGoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDLV3GHktEO8AlpsYBwIBEIB7ho0DQF7hEQPRz/8b61AHm2czX53Y9BNu5z+oyGYsoP643M58aTGsaHQzkTaAmGKlZTAEOjJkRJ4gZoabVuv4g6aJqf4k4w8pK7iIgHwMNy4nbUAqOWmqtnKpHZgy6jcFN2DzZzHIi4SNFsCkFc6Aw30ixtvqIDQPAXMW', 'subType': '00'}}, 'creationDate': {'$date': {'$numberLong': '1552949630483'}}, 'keyAltNames': ['altname', 'another_altname']}]

tests:
  - description: "updateMany with deterministic encryption"
    skipReason: "Waiting on SERVER-40871"
    clientOptions:
      autoEncryptOpts:
        kmsProviders:
          aws: {} # Credentials filled in from environment.
    operations:
      - name: updateMany
        arguments:
          filter: { ssn: { $in: [ "457-55-5462", "123-45-6789" ] } }
          update: { $set: { ssn: "987-65-4321", random: "abc" } }
        result:
          matchedCount: 1 # TODO: should be 2, but changing for now
          modifiedCount: 1 # TODO: should be 2
          upsertedCount: 0
    expectations:
      # Auto encryption will request the collection info.
      - command_started_event:
          command:
            listCollections: 1
            cursor: {}
            filter:
              name: *collection_name
          command_name: listCollections
      - command_started_event:
          command:
            listCollections: 1
            cursor: {}
            filter:
              name: "datakeys"
            $db: admin
          command_name: listCollections
      # Then key is fetched from the key vault.
      - command_started_event:
          command:
            find: datakeys
            filter: {"$or": [{"_id": {"$in": [ {'$binary': {'base64': 'AAAAAAAAAAAAAAAAAAAAAA==', 'subType': '04'}} ] }}, {"keyAltName": {"$in": []}}]}
            $db: admin
          command_name: find
      - command_started_event:
          command:
            update: *collection_name
            updates:
              - q: { ssn: { $in: [ {'$binary': {'base64': 'AQAAAAAAAAAAAAAAAAAAAAACsdNMtVDy09S7BbEGrxNeFPKWl/7qb2EFqJfA2FqBEK1jW/5WFUZTPKWls9PBz+4Ro8Z6g5b+zAY+rh0bHmssKfg4g3GZ3j7rBt1tyqh3B2w=', 'subType': '06'}}, {'$binary': {'base64': 'AQAAAAAAAAAAAAAAAAAAAAACUMZIlZ4eQzJmNxnxOi5fqWrhnpXDXdOPdkRG4hbqOTmTIN2+WfGXTcAaszTRg7XhM01c18lfd3XtPl3iUNXU6fEYjGf1mLPkQ3tlO3wOf/k=', 'subType': '06'}} ] } }
                u: { $set: { ssn: {'$binary': {'base64': 'AQAAAAAAAAAAAAAAAAAAAAACzcsm4xHv+De4+H3IDRaSJEx1f3Qs19qdophSh+XsQpYMcgo64MeiAP00umr3s7DTSy7mzuSRLZ/iuqxbNdThgp5KQvNB8kWrLnB+Zk0qom8', 'subType': '06'}}, random: { $$type: "binData" } } }
                multi: true
                upsert: false
            ordered: true
          command_name: update
    outcome:
      collection:
        # Outcome is checked using a separate MongoClient without auto encryption.
        data:
          - { _id: 1, ssn: {'$binary': {'base64': 'AQAAAAAAAAAAAAAAAAAAAAACzcsm4xHv+De4+H3IDRaSJEx1f3Qs19qdophSh+XsQpYMcgo64MeiAP00umr3s7DTSy7mzuSRLZ/iuqxbNdThgp5KQvNB8kWrLnB+Zk0qom8', 'subType': '06'}} }
          - { _id: 2, ssn: {'$binary': {'base64': 'AQAAAAAAAAAAAAAAAAAAAAACzcsm4xHv+De4+H3IDRaSJEx1f3Qs19qdophSh+XsQpYMcgo64MeiAP00umr3s7DTSy7mzuSRLZ/iuqxbNdThgp5KQvNB8kWrLnB+Zk0qom8', 'subType': '06'}} }
  - description: "updateMany fails when filtering on a random field"
    clientOptions:
      autoEncryptOpts:
        kmsProviders:
          aws: {} # Credentials filled in from environment.
    operations:
      - name: updateMany
        arguments:
          filter: { random: "abc" }
          update: { $set: { ssn: "123-45-6789" } }
        result:
          errorContains: "Cannot query on fields encrypted with the randomized encryption"