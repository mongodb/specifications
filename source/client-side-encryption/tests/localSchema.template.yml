runOn:
  - minServerVersion: "4.1.10"
database_name: &database_name "default"
collection_name: &collection_name "default"

data: []
# configure an empty schema
json_schema: {}
key_vault_data: [{{key()}}]

tests:
  - description: "A local schema should override"
    clientOptions:
      auto_encrypt_opts:
        schema_map:
          "default.default": {{schema('basic')}}
        kms_providers:
          aws: {} # Credentials filled in from environment.
    operations:
      - name: insertOne
        arguments:
          document: &doc0 { _id: 1, ssn: "457-55-5462" }
      - name: find
        arguments:
          filter: { _id: 1 }
        result: [*doc0]
    expectations:
      - command_started_event:
          command:
            listCollections: 1
            cursor: {}
            filter:
              name: "datakeys"
            $db: admin
          command_name: listCollections
      # Then key is fetched from the key vault.
      - command_started_event:
          command:
            find: datakeys
            filter: { _id: { $in: [ {{key()["_id"]}} ] } }
            $db: admin
          command_name: find
      - command_started_event:
          command:
            insert: *collection_name
            documents:
              - &doc0_encrypted { _id: 1, ssn: {{ciphertext("457-55-5462", field="ssn")}} }
            ordered: true
          command_name: insert
      - command_started_event:
          command:
            find: *collection_name
            filter: { _id: 1 }
          command_name: find
    outcome:
      collection:
        # Outcome is checked using a separate MongoClient without auto encryption.
        data:
          - *doc0_encrypted
