runOn:
  - minServerVersion: "4.1.10"
database_name: &database_name "default"
collection_name: &collection_name "default"

data: []
json_schema: {{schema(name="local:name2")}}
key_vault_data: [{{key(name="local:name2")}}]

tests:
  - description: "Automatically encrypt and decrypt with a named KMS provider"
    clientOptions:
      autoEncryptOpts:
        kmsProviders:
          "local:name2": {{local_provider(name="name2")}}
    operations:
      - name: insertOne
        arguments:
          document: &doc0 { _id: 1, encrypted_string: "string0" }
      - name: find
        arguments:
          filter: { _id: 1 }
        result: [*doc0]
    expectations:
      # Auto encryption will request the collection info.
      - command_started_event:
          command:
            listCollections: 1
            filter:
              name: *collection_name
          command_name: listCollections
      # Then key is fetched from the key vault.
      - command_started_event:
          command:
            find: datakeys
            filter: {"$or": [{"_id": {"$in": [ {{key(name="local:name2")["_id"]}} ] }}, {"keyAltNames": {"$in": []}}]}
            $db: keyvault
            readConcern: { level: "majority" }
          command_name: find
      - command_started_event:
          command:
            insert: *collection_name
            documents:
              - &doc0_encrypted { _id: 1, encrypted_string: {{ciphertext("string0", field="encrypted_string", schema="local:name2")}} }
            ordered: true
          command_name: insert
      - command_started_event:
          command:
            find: *collection_name
            filter: { _id: 1 }
          command_name: find
    outcome:
      collection:
        # Outcome is checked using a separate MongoClient without auto encryption.
        data:
          - *doc0_encrypted
