description: operation bulkwrite
schemaVersion: '1.26'
runOnRequirements:
  - minServerVersion: "8.0"
    serverless: forbid

createEntities:
  - client:
      id: &client0 client0
      useMultipleMongoses: false
      observeTracingMessages:
        enableCommandPayload: true
  - database:
      id: &database0 database0
      client: *client0
      databaseName: &databaseName operation-bulk-write
  - collection:
      id: collection0
      database: *database0
      collectionName: &collectionName test
initialData:
  - collectionName: *collectionName
    databaseName: *databaseName
    documents: []

_yamlAnchors:
  namespace: &namespace "operation-bulk-write.test"

tests:
  - description: bulkWrite
    operations:
      - object: *client0
        name: clientBulkWrite
        arguments:
          models:
            - insertOne:
                namespace: *namespace
                document: { _id: 8, x: 88 }
            - updateOne:
                namespace: *namespace
                filter: { _id: 1 }
                update: { $inc: { x: 1 } }
            - updateMany:
                namespace: *namespace
                filter:
                  $and: [ { _id: { $gt: 1 } }, { _id: { $lte: 3 } } ]
                update: { $inc: { x: 2 } }
            - replaceOne:
                namespace: *namespace
                filter: { _id: 4 }
                replacement: { x: 44 }
                upsert: true
            - deleteOne:
                namespace: *namespace
                filter: { _id: 5 }
            - deleteMany:
                namespace: *namespace
                filter:
                  $and: [ { _id: { $gt: 5 } }, { _id: { $lte: 7 } } ]

    expectTracingMessages:
      client: *client0
      ignoreExtraSpans: false
      spans:
        - name: bulkWrite operation-bulk-write.test
          tags:
            db.system: mongodb
            db.namespace: operation-bulk-write
            db.collection.name: test
            db.operation.name: bulkWrite
            db.operation.summary: bulkWrite operation-bulk-write.test
          nested:
            - name: command bulkWrite
              tags:
                db.system: mongodb
                db.namespace: admin
                db.collection.name: admin.$cmd
                db.command.name: bulkWrite
                network.transport: tcp
                db.mongodb.cursor_id: { $$exists: false }
                db.response.status_code: { $$exists: false }
                exception.message: { $$exists: false }
                exception.type: { $$exists: false }
                exception.stacktrace: { $$exists: false }
                server.address: { $$type: string }
                server.port: { $$type: ['int', 'long'] }
                server.type: { $$type: string }
                db.query.summary: bulkWrite
                db.query.text:
                  $$matchAsDocument:
                    $$matchAsRoot:
                      bulkWrite: 1
                      errorsOnly: true
                      ordered: true
                      ops: [ { "insert": 0, "document": { "_id": 8, "x": 88 } },
                             { "update": 0, "multi": false, "filter": { "_id": 1 }, "updateMods": { "$inc": { "x": 1 } } },
                             { "update": 0, "multi": true, "filter": { "$and": [ { "_id": { "$gt": 1 } }, { "_id": { "$lte": 3 } } ] },
                               "updateMods": { "$inc": { "x": 2 } } },
                             { "update": 0, "multi": false, "filter": { "_id": 4 },
                               "updateMods": { "x": 44 }, "upsert": true },
                             { "delete": 0, "multi": false, "filter": { "_id": 5 } },
                             { "delete": 0, "multi": true, "filter": { "$and": [
                             { "_id": { "$gt": 5 } }, { "_id": { "$lte": 7 } } ] } } ]
                db.mongodb.server_connection_id:
                  $$type: [ 'int', 'long' ]
                db.mongodb.driver_connection_id:
                  $$type: [ 'int', 'long' ]
