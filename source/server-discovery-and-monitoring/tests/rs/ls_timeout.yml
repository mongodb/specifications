description: "Parse logicalSessionTimeoutMinutes from replica set"

uri: "mongodb://a/?replicaSet=rs"

phases: [

    {
        responses: [
            ["a:27017", {
                ok: 1,
                ismaster: true,
                hosts: ["a:27017", "b:27017"],
                setName: "rs",
                logicalSessionTimeoutMinutes: 1,
                minWireVersion: 0,
                maxWireVersion: 6
            }],
            ["b:27017", {
                ok: 1,
                ismaster: false,
                secondary: true,
                hosts: ["a:27017", "b:27017"],
                setName: "rs",
                logicalSessionTimeoutMinutes: 2,
                minWireVersion: 0,
                maxWireVersion: 6
            }]
        ],

        # logicalSessionTimeoutMinutes is the minimum of the two
        outcome: {
            servers: {
                "a:27017": {
                    type: "RSPrimary",
                    setName: "rs"
                },
                "b:27017": {
                    type: "RSSecondary",
                    setName: "rs"
                }
            },
            topologyType: "ReplicaSetWithPrimary",
            logicalSessionTimeoutMinutes: 1,
            setName: "rs",
        }
    },
    # Now an isMaster response with no logicalSessionTimeoutMinutes
    {
        responses: [
            ["a:27017", {
                ok: 1,
                ismaster: true,
                hosts: ["a:27017", "b:27017"],
                setName: "rs",
                logicalSessionTimeoutMinutes: 1,
                minWireVersion: 0,
                maxWireVersion: 6
            }],
            ["b:27017", {
                ok: 1,
                ismaster: false,
                secondary: true,
                hosts: ["a:27017", "b:27017"],
                setName: "rs",
                logicalSessionTimeoutMinutes: null,
                minWireVersion: 0,
                maxWireVersion: 6
            }]
        ],

        # Sessions aren't supported now
        outcome: {
            servers: {
                "a:27017": {
                    type: "RSPrimary",
                    setName: "rs"
                },
                "b:27017": {
                    type: "RSSecondary",
                    setName: "rs"
                }
            },
            topologyType: "ReplicaSetWithPrimary",
            logicalSessionTimeoutMinutes: null,
            setName: "rs",
        }
    }
]
