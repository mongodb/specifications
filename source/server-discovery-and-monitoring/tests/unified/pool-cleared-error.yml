---
description: pool-cleared-error
schemaVersion: "1.9"
runOnRequirements:
  - minServerVersion: "4.9"
    topologies:
      - replicaset
      - sharded
createEntities:
  - client:
      id: &setupClient setupClient
initialData: &initialData
  - collectionName: &collectionName pool-cleared-error
    databaseName: &databaseName sdam-tests
    documents: []
tests:
  - description: PoolClearedError does not mark server unknown
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client client
                observeEvents:
                  - poolClearedEvent
                  - serverDescriptionChangedEvent
                uriOptions:
                  retryWrites: true
                  maxPoolSize: 1
                  appname: poolClearedErrorTest
            - database:
                id: &database database
                client: *client
                databaseName: *databaseName
            - collection:
                id: &collection collection
                database: *database
                collectionName: *collectionName
      - name: insertOne
        object: *collection
        arguments:
          document:
            _id: 1
      - name: failPoint
        object: testRunner
        arguments:
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 1
            data:
              failCommands:
                - insert
              blockConnection: true
              blockTimeMS: 100
              closeConnection: true
              appName: poolClearedErrorTest
          client: *setupClient
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - thread:
                id: &thread0 thread0
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - thread:
                id: &thread1 thread1
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - thread:
                id: &thread2 thread2
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - thread:
                id: &thread3 thread3
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - thread:
                id: &thread4 thread4
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - thread:
                id: &thread5 thread5
      - name: runOnThread
        object: testRunner
        arguments:
          thread: *thread0
          operation:
            name: insertOne
            object: *collection
            arguments:
              document:
                _id: 2
      - name: runOnThread
        object: testRunner
        arguments:
          thread: *thread1
          operation:
            name: insertOne
            object: *collection
            arguments:
              document:
                _id: 3
      - name: runOnThread
        object: testRunner
        arguments:
          thread: *thread2
          operation:
            name: insertOne
            object: *collection
            arguments:
              document:
                _id: 4
      - name: runOnThread
        object: testRunner
        arguments:
          thread: *thread3
          operation:
            name: insertOne
            object: *collection
            arguments:
              document:
                _id: 5
      - name: runOnThread
        object: testRunner
        arguments:
          thread: *thread4
          operation:
            name: insertOne
            object: *collection
            arguments:
              document:
                _id: 6
      - name: runOnThread
        object: testRunner
        arguments:
          thread: *thread5
          operation:
            name: insertOne
            object: *collection
            arguments:
              document:
                _id: 7
      - name: waitForThread
        object: testRunner
        arguments:
          thread: *thread0
      - name: waitForThread
        object: testRunner
        arguments:
          thread: *thread1
      - name: waitForThread
        object: testRunner
        arguments:
          thread: *thread2
      - name: waitForThread
        object: testRunner
        arguments:
          thread: *thread3
      - name: waitForThread
        object: testRunner
        arguments:
          thread: *thread4
      - name: waitForThread
        object: testRunner
        arguments:
          thread: *thread5
      - name: waitForEvent
        object: testRunner
        arguments:
          client: *client
          event:
            serverDescriptionChangedEvent:
              newDescription:
                type: Unknown
          count: 1
      - name: waitForEvent
        object: testRunner
        arguments:
          client: *client
          event:
            poolClearedEvent: {}
          count: 1
      - name: insertOne
        object: *collection
        arguments:
          document:
            _id: 8
      - name: assertEventCount
        object: testRunner
        arguments:
          client: *client
          event:
            serverDescriptionChangedEvent:
              newDescription:
                type: Unknown
          count: 1
      - name: assertEventCount
        object: testRunner
        arguments:
          client: *client
          event:
            poolClearedEvent: {}
          count: 1
    outcome:
      - collectionName: *collectionName
        databaseName: *databaseName
        documents:
          - _id: 1
          - _id: 2
          - _id: 3
          - _id: 4
          - _id: 5
          - _id: 6
          - _id: 7
          - _id: 8
