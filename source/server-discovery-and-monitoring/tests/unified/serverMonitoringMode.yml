description: serverMonitoringMode

schemaVersion: "1.17"
# These tests cannot run on replica sets because the order of the expected
# SDAM events are non-deterministic when monitoring multiple servers.
# They also cannot run on Serverless or load balanced clusters where SDAM is disabled.
runOnRequirements:
  - topologies: [single, sharded, sharded-replicaset]
    serverless: forbid
tests:
  - description: "connect with serverMonitoringMode=auto"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client0 client0
                uriOptions:
                  serverMonitoringMode: "auto"
                useMultipleMongoses: false
                observeEvents:
                  - serverHeartbeatStartedEvent
                  - serverHeartbeatSucceededEvent
                  - serverHeartbeatFailedEvent
            - database:
                id: &dbServerMonitoringModeAuto dbServerMonitoringModeAuto
                client: *client0
                databaseName: sdam-tests
      - name: runCommand
        object: *dbServerMonitoringModeAuto
        arguments:
          commandName: ping
          command: { ping: 1 }
        expectResult: { ok: 1 }
    expectEvents:
      - client: *client0
        eventType: sdam
        events:
          - serverHeartbeatStartedEvent:
              awaited: False
          - serverHeartbeatSucceededEvent:
              awaited: False
          - serverHeartbeatStartedEvent:
              awaited: True

  - description: "connect with serverMonitoringMode=stream"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client1 client1
                uriOptions:
                  serverMonitoringMode: "stream"
                useMultipleMongoses: false
                observeEvents:
                  - serverHeartbeatStartedEvent
                  - serverHeartbeatSucceededEvent
                  - serverHeartbeatFailedEvent
            - database:
                id: &dbServerMonitoringModeStream dbServerMonitoringModeStream
                client: *client1
                databaseName: sdam-tests
      - name: runCommand
        object: *dbServerMonitoringModeStream
        arguments:
          commandName: ping
          command: { ping: 1 }
        expectResult: { ok: 1 }
    expectEvents:
      - client: *client1
        eventType: sdam
        events:
          - serverHeartbeatStartedEvent:
              awaited: False
          - serverHeartbeatSucceededEvent:
              awaited: False
          - serverHeartbeatStartedEvent:
              awaited: True

  - description: "connect with serverMonitoringMode=poll"
    operations:
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client2 client2
                uriOptions:
                  serverMonitoringMode: "poll"
                useMultipleMongoses: false
                observeEvents:
                  - serverHeartbeatStartedEvent
                  - serverHeartbeatSucceededEvent
                  - serverHeartbeatFailedEvent
            - database:
                id: &dbServerMonitoringModePoll dbServerMonitoringModePoll
                client: *client2
                databaseName: sdam-tests
      - name: runCommand
        object: *dbServerMonitoringModePoll
        arguments:
          commandName: ping
          command: { ping: 1 }
        expectResult: { ok: 1 }
    expectEvents:
      - client: *client2
        eventType: sdam
        events:
          - serverHeartbeatStartedEvent:
              awaited: False
          - serverHeartbeatSucceededEvent:
              awaited: False
          - serverHeartbeatStartedEvent:
              awaited: False
