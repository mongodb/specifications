# This file was created automatically using mongodb-spec-converter.
# Please review the generated file, then remove this notice.

description: pin-mongos
schemaVersion: '1.3'
createEntities:
  -
    client:
      id: &client0 client0
      useMultipleMongoses: false
      observeEvents:
        - commandStartedEvent
  -
    database:
      id: &database0 database0
      client: *client0
      databaseName: &database_name transaction-tests
  -
    collection:
      id: &collection0 collection0
      database: *database0
      collectionName: &collection_name test
  -
    session:
      id: &session0 session0
      client: *client0
  -
    session:
      id: &session1 session1
      client: *client0
runOnRequirements:
  -
    minServerVersion: 4.1.8
    serverless: forbid
    topologies:
      - sharded
      - load-balanced
initialData:
  -
    collectionName: *collection_name
    databaseName: *database_name
    documents: &data
      -
        _id: 1
      -
        _id: 2
tests:
  -
    description: countDocuments
    useMultipleMongoses: true
    operations:
      - &startTransaction
        object: *session0
        name: startTransaction
      - &countDocuments
        object: *collection0
        name: countDocuments
        arguments:
          filter:
            _id: 2
          session: *session0
        expectResult: 1
      - *countDocuments
      - *countDocuments
      - *countDocuments
      - *countDocuments
      - *countDocuments
      - *countDocuments
      - *countDocuments
      - &commitTransaction
        object: *session0
        name: commitTransaction
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents: *data
  -
    description: distinct
    useMultipleMongoses: true
    operations:
      - *startTransaction
      - &distinct
        object: *collection0
        name: distinct
        arguments:
          fieldName: _id
          session: *session0
        expectResult:
          - 1
          - 2
      - *distinct
      - *distinct
      - *distinct
      - *distinct
      - *distinct
      - *distinct
      - *distinct
      - *commitTransaction
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents: *data
  -
    description: find
    useMultipleMongoses: true
    operations:
      -
        object: *session0
        name: startTransaction
      - &find
        object: *collection0
        name: find
        arguments:
          filter:
            _id: 2
          session: *session0
        expectResult:
          -
            _id: 2
      - *find
      - *find
      - *find
      - *find
      - *find
      - *find
      - *find
      - *commitTransaction
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents: *data
  -
    description: insertOne
    useMultipleMongoses: true
    operations:
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 3
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 3
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 4
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 4
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 5
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 5
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 6
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 6
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 7
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 7
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 8
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 8
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 9
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 9
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 10
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 10
      - *commitTransaction
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          -
            _id: 1
          -
            _id: 2
          -
            _id: 3
          -
            _id: 4
          -
            _id: 5
          -
            _id: 6
          -
            _id: 7
          -
            _id: 8
          -
            _id: 9
          -
            _id: 10
  -
    description: 'mixed read write operations'
    useMultipleMongoses: true
    operations:
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 3
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 3
      - &countDocuments
        object: *collection0
        name: countDocuments
        arguments:
          filter:
            _id: 3
          session: *session0
        expectResult: 1
      - *countDocuments
      - *countDocuments
      - *countDocuments
      - *countDocuments
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 4
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 4
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 5
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 5
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 6
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 6
      -
        object: *collection0
        name: insertOne
        arguments:
          document:
            _id: 7
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 7
      - *commitTransaction
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          -
            _id: 1
          -
            _id: 2
          -
            _id: 3
          -
            _id: 4
          -
            _id: 5
          -
            _id: 6
          -
            _id: 7
  -
    description: 'multiple commits'
    useMultipleMongoses: true
    operations:
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: insertMany
        arguments:
          documents:
            -
              _id: 3
            -
              _id: 4
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedIds:
              $$unsetOrMatches:
                '0': 3
                '1': 4
      - &assertSessionPinned
        object: testRunner
        name: assertSessionPinned
        arguments:
          session: *session0
      - *commitTransaction
      - *assertSessionPinned
      - *commitTransaction
      - *commitTransaction
      - *commitTransaction
      - *commitTransaction
      - *commitTransaction
      - *commitTransaction
      - *commitTransaction
      - *commitTransaction
      - *commitTransaction
      - *assertSessionPinned
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          -
            _id: 1
          -
            _id: 2
          -
            _id: 3
          -
            _id: 4
  -
    description: 'remain pinned after non-transient error on commit'
    useMultipleMongoses: true
    operations:
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: insertMany
        arguments:
          documents:
            -
              _id: 3
            -
              _id: 4
          session: *session0
        expectResult:
          $$unsetOrMatches:
            insertedIds:
              $$unsetOrMatches:
                '0': 3
                '1': 4
      - *assertSessionPinned
      -
        object: testRunner
        name: targetedFailPoint
        arguments:
          session: *session0
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 1
            data:
              failCommands:
                - commitTransaction
              errorCode: 51
      -
        object: *session0
        name: commitTransaction
        expectError:
          errorLabelsOmit:
            - TransientTransactionError
          errorCode: 51
      - *assertSessionPinned
      -
        object: *session0
        name: commitTransaction
      - *assertSessionPinned
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          -
            _id: 1
          -
            _id: 2
          -
            _id: 3
          -
            _id: 4
  -
    description: 'unpin after transient error within a transaction'
    useMultipleMongoses: true
    operations:
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: insertOne
        arguments:
          session: *session0
          document:
            _id: 3
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 3
      -
        object: testRunner
        name: targetedFailPoint
        arguments:
          session: *session0
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 1
            data:
              failCommands:
                - insert
              closeConnection: true
      -
        object: *collection0
        name: insertOne
        arguments:
          session: *session0
          document:
            _id: 4
        expectError:
          errorLabelsContain:
            - TransientTransactionError
          errorLabelsOmit:
            - UnknownTransactionCommitResult
      -
        object: *session0
        name: abortTransaction
    expectEvents:
      -
        client: *client0
        events:
          -
            commandStartedEvent:
              command:
                insert: *collection_name
                documents:
                  -
                    _id: 3
                ordered: true
                readConcern:
                  $$exists: false
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction: true
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: insert
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                insert: *collection_name
                documents:
                  -
                    _id: 4
                ordered: true
                readConcern:
                  $$exists: false
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: insert
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                abortTransaction: 1
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  $$exists: false
                recoveryToken:
                  $$exists: true
              commandName: abortTransaction
              databaseName: admin
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          -
            _id: 1
          -
            _id: 2
  -
    description: 'unpin after transient error within a transaction and commit'
    useMultipleMongoses: true
    clientOptions:
      heartbeatFrequencyMS: 30000
    operations:
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: insertOne
        arguments:
          session: *session0
          document:
            _id: 3
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 3
      -
        object: testRunner
        name: targetedFailPoint
        arguments:
          session: *session0
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 7
            data:
              failCommands:
                - insert
                - isMaster
                - hello
              closeConnection: true
      -
        object: *collection0
        name: insertOne
        arguments:
          session: *session0
          document:
            _id: 4
        expectError:
          errorLabelsContain:
            - TransientTransactionError
          errorLabelsOmit:
            - UnknownTransactionCommitResult
      -
        object: *session0
        name: commitTransaction
        expectError:
          errorLabelsContain:
            - TransientTransactionError
          errorLabelsOmit:
            - UnknownTransactionCommitResult
          errorCodeName: NoSuchTransaction
    expectEvents:
      -
        client: *client0
        events:
          -
            commandStartedEvent:
              command:
                insert: *collection_name
                documents:
                  -
                    _id: 3
                ordered: true
                readConcern:
                  $$exists: false
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction: true
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: insert
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                insert: *collection_name
                documents:
                  -
                    _id: 4
                ordered: true
                readConcern:
                  $$exists: false
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: insert
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                commitTransaction: 1
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  $$exists: false
                recoveryToken:
                  $$exists: true
              commandName: commitTransaction
              databaseName: admin
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          -
            _id: 1
          -
            _id: 2
