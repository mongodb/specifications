# This file was created automatically using mongodb-spec-converter.
# Please review the generated file, then remove this notice.

description: retryable-abort
schemaVersion: '1.3'
createEntities:
  -
    client:
      id: &client0 client0
      useMultipleMongoses: false
      observeEvents:
        - commandStartedEvent
  -
    database:
      id: &database0 database0
      client: *client0
      databaseName: &database_name transaction-tests
  -
    collection:
      id: &collection0 collection0
      database: *database0
      collectionName: &collection_name test
  -
    session:
      id: &session0 session0
      client: *client0
  -
    session:
      id: &session1 session1
      client: *client0
runOnRequirements:
  -
    minServerVersion: '4.0'
    topologies:
      - replicaset
  -
    minServerVersion: 4.1.8
    topologies:
      - sharded
      - load-balanced
initialData:
  -
    collectionName: *collection_name
    databaseName: *database_name
    documents: []
tests:
  -
    description: 'abortTransaction only performs a single retry'
    clientOptions:
      retryWrites: false
    operations:
      -
        object: testRunner
        name: failPoint
        arguments:
          client: *client0
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 2
            data:
              failCommands:
                - abortTransaction
              closeConnection: true
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: insertOne
        arguments:
          session: *session0
          document:
            _id: 1
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 1
      -
        object: *session0
        name: abortTransaction
    expectEvents:
      -
        client: *client0
        events:
          -
            commandStartedEvent:
              command:
                insert: *collection_name
                documents:
                  -
                    _id: 1
                ordered: true
                readConcern:
                  $$exists: false
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction: true
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: insert
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                abortTransaction: 1
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: abortTransaction
              databaseName: admin
          -
            commandStartedEvent:
              command:
                abortTransaction: 1
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: abortTransaction
              databaseName: admin
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents: []
  -
    description: 'abortTransaction does not retry after Interrupted'
    operations:
      -
        object: testRunner
        name: failPoint
        arguments:
          client: *client0
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 1
            data:
              failCommands:
                - abortTransaction
              errorCode: 11601
              closeConnection: false
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: insertOne
        arguments:
          session: *session0
          document:
            _id: 1
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 1
      -
        object: *session0
        name: abortTransaction
    expectEvents:
      -
        client: *client0
        events:
          -
            commandStartedEvent:
              command:
                insert: *collection_name
                documents:
                  -
                    _id: 1
                ordered: true
                readConcern:
                  $$exists: false
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction: true
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: insert
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                abortTransaction: 1
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: abortTransaction
              databaseName: admin
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents: []
  -
    description: 'abortTransaction does not retry after WriteConcernError Interrupted'
    operations:
      -
        object: testRunner
        name: failPoint
        arguments:
          client: *client0
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 1
            data:
              failCommands:
                - abortTransaction
              writeConcernError:
                code: 11601
                errmsg: 'operation was interrupted'
      -
        object: *session0
        name: startTransaction
        arguments:
          writeConcern:
            w: majority
      -
        object: *collection0
        name: insertOne
        arguments:
          session: *session0
          document:
            _id: 1
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 1
      -
        object: *session0
        name: abortTransaction
    expectEvents:
      -
        client: *client0
        events:
          -
            commandStartedEvent:
              command:
                insert: *collection_name
                documents:
                  -
                    _id: 1
                ordered: true
                readConcern:
                  $$exists: false
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction: true
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: insert
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                abortTransaction: 1
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  w: majority
              commandName: abortTransaction
              databaseName: admin
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents: []
  -
    description: 'abortTransaction succeeds after connection error'
    operations:
      -
        object: testRunner
        name: failPoint
        arguments:
          client: *client0
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 1
            data:
              failCommands:
                - abortTransaction
              closeConnection: true
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: insertOne
        arguments:
          session: *session0
          document:
            _id: 1
        expectResult:
          $$unsetOrMatches:
            insertedId:
              $$unsetOrMatches: 1
      -
        object: *session0
        name: abortTransaction
    expectEvents:
      -
        client: *client0
        events:
          -
            commandStartedEvent:
              command:
                insert: *collection_name
                documents:
                  -
                    _id: 1
                ordered: true
                readConcern:
                  $$exists: false
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction: true
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: insert
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                abortTransaction: 1
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: abortTransaction
              databaseName: admin
          -
            commandStartedEvent:
              command:
                abortTransaction: 1
                lsid:
                  $$sessionLsid: *session0
                txnNumber:
                  $numberLong: '1'
                startTransaction:
                  $$exists: false
                autocommit: false
                writeConcern:
                  $$exists: false
              commandName: abortTransaction
              databaseName: admin
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents: []
