---
description: cmap-auth-error

schemaVersion: "1.10"

runOnRequirements:
  # failCommand appName requirements
  - minServerVersion: "4.4"
    serverless: forbid
    topologies: [ single, replicaset, sharded ]
    auth: true

createEntities:
  - client:
      id: &setupClient setupClient
      useMultipleMongoses: false

initialData: &initialData
  - collectionName: &collectionName cmap-network-error
    databaseName: &databaseName cmap-tests
    documents:
      - _id: 1
      - _id: 2

tests:
  - description: Pool is cleared after auth error during checkout
    operations:
      - name: failPoint
        object: testRunner
        arguments:
          client: *setupClient
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 1
            data:
              failCommands:
                - saslContinue
              errorCode: 18
              appName: &authErrorAppName cmapAuthErrorTest
      - name: createEntities
        object: testRunner
        arguments:
          entities:
            - client:
                id: &client client
                useMultipleMongoses: false
                observeEvents:
                  - connectionCheckOutStartedEvent
                  - connectionCheckedOutEvent
                  - connectionCheckOutFailedEvent
                  - connectionCheckedInEvent
                  - connectionClosedEvent
                  - poolClearedEvent
                  - connectionReadyEvent
                  - connectionCreatedEvent
                uriOptions:
                  retryWrites: false
                  retryReads: false
                  appname: *authErrorAppName
            - database:
                id: &database database
                client: *client
                databaseName: *databaseName
            - collection:
                id: &collection collection
                database: *database
                collectionName: *collectionName
      - name: find
        object: *collection
        arguments:
          filter:
            _id: 1
        expectError:
          isError: true
      - name: waitForEvent
        object: testRunner
        arguments:
          client: *client
          event:
            connectionCheckOutFailedEvent: {}
          count: 1
    expectEvents:
      - client: *client
        eventType: cmap
        events:
          - connectionCheckOutStartedEvent: {}
          - connectionCreatedEvent: {}
          - poolClearedEvent: {}
          - connectionClosedEvent:
              reason: error
          - connectionCheckOutFailedEvent:
              reason: connectionError

    outcome:
      - collectionName: *collectionName
        databaseName: *databaseName
        documents:
          - _id: 1
          - _id: 2
