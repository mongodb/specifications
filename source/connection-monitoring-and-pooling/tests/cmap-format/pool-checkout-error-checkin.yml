version: 1
style: integration
description: checking in a connection after checkout fails closes connection
runOn:
  -
    # required for appName in fail point
    minServerVersion: "4.9.0"
poolOptions:
  appName: &appName "poolCheckOutErrorCheckInTest"
operations:
  - name: ready
  - name: checkOut
    label: conn
  # Enable a failpoint so the next checkOut will fail.
  - name: failPoint
    failPoint:
      configureFailPoint: failCommand
      # Use a high number of times to prevent monitor checks from interfering
      mode: { times: 10 }
      data:
        failCommands: ["isMaster","hello"]
        closeConnection: true
        appName: *appName
  # Perform check out in another thread so the main thread can continue to
  # execute operations.
  - name: start
    target: thread1
  - name: checkOut
    thread: thread1
  # Wait for the check out to fail
  - name: waitForEvent
    event: ConnectionCheckOutFailed
    count: 1
  - name: checkIn
    connection: conn
events:
  - type: ConnectionCheckOutStarted
  - type: ConnectionCreated
  - type: ConnectionReady
  - type: ConnectionCheckedOut
  - type: ConnectionCheckOutStarted
  - type: ConnectionCreated
  - type: ConnectionPoolCleared
  - type: ConnectionClosed
    reason: error
    connectionId: 2
  - type: ConnectionCheckOutFailed
    reason: connectionError
  - type: ConnectionCheckedIn
  - type: ConnectionClosed
    connectionId: 1
    reason: stale
ignore:
  - ConnectionPoolCreated
  - ConnectionPoolReady
