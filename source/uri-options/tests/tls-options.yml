tests:
    -
        description: "Valid required tls options are parsed correctly"
        uri: "mongodb://example.com/?tls=true&tlsCAFile=ca.pem&tlsClientCertFile=cert.pem&tlsClientKeyPassword=hunter2"
        valid: true
        warning: false
        hosts: ~
        auth:
            username: ~
            password: ~
            db: ~
        options:
            tls: "true"
            tlsCAFile: "ca.pem"
            tlsClientCertFile: "cert.pem"
            tlsClientKeyPassword: "hunter2"
    -
        description: "tlsAllowInvalidCertificates is parsed correctly"
        uri: "mongodb://example.com/?tlsAllowInvalidCertificates=true"
        valid: true
        warning: false
        hosts: ~
        auth:
            username: ~
            password: ~
            db: ~
        options:
            tlsAllowInvalidCertificates: "true"
    -
        description: "tlsAllowInvalidHostnames is parsed correctly"
        uri: "mongodb://example.com/?tlsAllowInvalidHostnames=true"
        valid: true
        warning: false
        hosts: ~
        auth:
            username: ~
            password: ~
            db: ~
        options:
            tlsAllowInvalidHostnames: "true"
    -
        description: "tlsInsecure is parsed correctly"
        uri: "mongodb://example.com/?tlsInsecure=true"
        valid: true
        warning: false
        hosts: ~
        auth:
            username: ~
            password: ~
            db: ~
        options:
            tlsInsecure: "true"
    -
        description: "tlsClientKeyFile is parsed correctly"
        uri: "mongodb://example.com/?tlsClientKeyFile=client.pem"
        valid: true
        warning: false
        hosts: ~
        auth:
            username: ~
            password: ~
            db: ~
        options:
            tlsClientKeyFile: "client.pem"
