# Requires libmongocrypt 1.8.0.
runOn:
  - minServerVersion: "7.0.0"
    # Skip QEv2 (also referred to as FLE2v2) tests on Serverless. Unskip once Serverless enables the QEv2 protocol.
    # FLE 2 Encrypted collections are not supported on standalone.
    topology: [ "replicaset", "sharded", "load-balanced" ]
database_name: &database_name "default"
collection_name: &collection_name "default"
data: []
encrypted_fields: {{ yamlfile ("encryptedFields.json") }}
key_vault_data: [ {{ yamlfile ("keys/key2-document.json") }}]
tests:
  - description: "encryptedFieldsMap is preferred over remote encryptedFields"
    clientOptions:
      autoEncryptOpts:
        kmsProviders:
          local: {{ local_provider() }}
        encryptedFieldsMap: {
          "default.default": {
            "fields": []
          }
        }
    operations:
      # EncryptedFieldsMap overrides remote encryptedFields.
      # Automatic encryption does not occur on encryptedUnindexed. The value is validated on the server.
      - name: insertOne
        arguments:
          document: &doc0 {
            _id: 1,
            encryptedUnindexed: {
              "$binary": {
                "base64": "BqvN76sSNJh2EjQSNFZ4kBICTQaVZPWgXp41I7mPV1rLFTtw1tXzjcdSEyxpKKqujlko5TeizkB9hHQ009dVY1+fgIiDcefh+eQrm3CkhQ==",
                "subType": "06"
              }
            }
          }
      - name: find
        arguments:
          filter: { "_id": 1 }
        result: [{"_id": 1, "encryptedUnindexed": "value123" }]
    expectations:
      - command_started_event:
          command:
            insert: *collection_name
            documents:
              - *doc0
            ordered: true
          command_name: insert
      - command_started_event:
          command:
            find: *collection_name
            filter: { "_id": 1}
          command_name: find
      - command_started_event:
          command:
            find: datakeys
            filter: {
                  "$or": [
                      {
                          "_id": {
                              "$in": [
                                  {{ yamlfile ("keys/key2-id.json" ) }}
                              ]
                          }
                      },
                      {
                          "keyAltNames": {
                              "$in": []
                          }
                      }
                  ]
              }
            $db: keyvault
            readConcern: { level: "majority" }
          command_name: find
    outcome:
      collection:
        data:
          - *doc0
